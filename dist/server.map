{"version":3,"sources":[".webpack/bootstrap","../server/app.ts","../server/controllers/AuthController.ts","../server/controllers/NoticesController.ts","../server/controllers/StudentController.ts","../server/controllers/UserController.ts","../server/controllers/index.ts","../server/server.ts","../server/services/authService.ts","../server/services/index.ts","../server/services/initService.ts",".external \"body-parser\"",".external \"cors\"",".external \"express\"",".external \"jsonwebtoken\"",".external \"mssql\"",".external \"tslib\"",".external \"uuid\""],"names":[],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as express from 'express';\r\nimport * as cors from 'cors';\r\nimport * as bodyParser from 'body-parser';\r\nimport * as sql from 'mssql';\r\nimport { InitService } from './services';\r\n\r\nclass App {\r\n\r\n    public app: express.Application;\r\n    public port: number;\r\n    public init: InitService;\r\n\r\n    constructor(controllers: Array<any>, port: number) {\r\n        this.app = express();\r\n        this.port = port;\r\n\r\n        this.init = new InitService();\r\n\r\n        this.initializeMiddleware();\r\n        this.initializeServer();\r\n        this.initializeControllers(controllers);\r\n    }\r\n\r\n    private initializeMiddleware() {\r\n        this.app.use(bodyParser.urlencoded({extended: true}));\r\n        this.app.use(bodyParser.json());\r\n        this.app.use(cors());\r\n    }\r\n\r\n    private initializeServer() {\r\n        const config = {\r\n            user: 'SwishAdmin',\r\n            password: 'Windyrain1',\r\n            server: 'swishblaqstudioserver.database.windows.net',\r\n            database: 'ValorantLFG',\r\n            encrypt: true\r\n        };\r\n        sql.connect(config, (err) => {\r\n            if (err) { console.log(err); }\r\n\r\n            this.init.noticesTimeout();\r\n        });\r\n    }\r\n\r\n    private initializeControllers(controllers) {\r\n        controllers.forEach((controller) => {\r\n            this.app.use('/api', controller.router);\r\n        });\r\n    }\r\n\r\n    public listen() {\r\n        this.app.listen(this.port, () => {\r\n            console.log(`Server started on port ${this.port}`);\r\n        });\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import * as express from 'express';\r\nimport { AuthService } from '../services';\r\n\r\nexport class AuthController {\r\n    public router = express.Router();\r\n    private auth: AuthService;\r\n    constructor() {\r\n        this.intializeRoutes();\r\n        this.auth = new AuthService();\r\n    }\r\n\r\n    public intializeRoutes() {\r\n        this.router.post('/authenticate', this.authenticate);\r\n    }\r\n\r\n    authenticate = async (req, res) => {\r\n        const authToken = req.headers.authorization;\r\n        if (this.auth.isExpired(authToken)) {\r\n            res.json({msg: 'Token Expired'});\r\n        } else {\r\n            res.json({msg: 'Token Cleared'});\r\n        }\r\n    }\r\n}\r\n","import * as express from 'express';\r\nimport * as sql from 'mssql';\r\nimport { AuthService } from '../services';\r\nimport * as uuid from 'uuid';\r\nimport { debug } from 'util';\r\n\r\nexport class NoticesController {\r\n    public router = express.Router();\r\n    private auth: AuthService;\r\n    constructor() {\r\n        console.log(\"InitializedRoutes '/notices'\")\r\n        this.intializeRoutes();\r\n        this.auth = new AuthService();\r\n    }\r\n\r\n    public intializeRoutes() {\r\n        this.router.post('/notices', this.addNotice);\r\n        this.router.get('/notices', this.getNotices);\r\n        this.router.post('/playerjoined', this.playerJoined);\r\n        console.log(\"InitializedRoutes '/notices'\")\r\n    }\r\n\r\n    playerJoined =async (req, res) =>{\r\n        const request = new sql.Request();\r\n        console.log(\"player has joined a team!\")\r\n        const RiotID = req.body.RiotID;\r\n        const PlayersNeeded = req.body.PlayersNeeded;\r\n        const Activity = req.body.Activity;\r\n        const Language = req.body.Language;\r\n        const NeedMic = req.body.NeedMic;\r\n        const PNeeded = Number(req.body.PlayersNeeded) -1 ;\r\n        const PlayersNeededs = String(PNeeded);\r\n        request.query(`DELETE FROM lfgrequests WHERE CONVERT (VARCHAR, RiotID)='${RiotID}'`, (err, result) =>{\r\n            if (err) { console.log(err); }\r\n            if(PNeeded !== 0 ){\r\n                console.log(\"Minusing 1\")\r\n                request.query(`insert into lfgrequests(RiotID, PlayersNeeded, Activity, Language, NeedMic) values('${RiotID}','${PlayersNeededs}','${Activity}','${Language}','${NeedMic}')`, (err, result) => {\r\n                if (err) { console.log(err); }\r\n                });\r\n            }\r\n            else{\r\n                console.log(\"team Full\");\r\n            }\r\n\r\n            res.json({msg: 'Notice Created'});\r\n        });\r\n    }\r\n\r\n    Minus1 = async (req, res) => {\r\n        console.log(\"recieved Minus1 request\");\r\n        const request = new sql.Request();\r\n        const RiotID = req.body.RiotID;\r\n        const PNeeded = Number(req.body.PlayersNeeded) -1 ;\r\n        const Activity = req.body.Activity;\r\n        const Language = req.body.Language;\r\n        const NeedMic = req.body.NeedMic;\r\n        const PlayersNeeded = String(PNeeded);\r\n        if(PNeeded != 0 ){\r\n// tslint:disable-next-line: max-line-length\r\n            request.query(`insert into lfgrequests(RiotID, PlayersNeeded, Activity, Language, NeedMic) values('${RiotID}','${PlayersNeeded}','${Activity}','${Language}','${NeedMic}')`, (err, result) => {\r\n            if (err) { console.log(err); }\r\n\r\n            res.json({msg: 'Notice Created'});\r\n            });\r\n        }\r\n        else{\r\n            console.log(\"team Full\");\r\n        }\r\n    }\r\n\r\n    addNotice = async (req, res) => {\r\n        console.log(\"recieved Addnotice request\");\r\n        const request = new sql.Request();\r\n        const RiotID = req.body.RiotID;\r\n        const PlayersNeeded = req.body.PlayersNeeded;\r\n        const Activity = req.body.Activity;\r\n        const Language = req.body.Language;\r\n        const NeedMic = req.body.NeedMic;\r\n        // tslint:disable-next-line: max-line-length\r\n        request.query(`insert into lfgrequests(RiotID, PlayersNeeded, Activity, Language, NeedMic) values('${RiotID}','${PlayersNeeded}','${Activity}','${Language}','${NeedMic}')`, (err, result) => {\r\n            if (err) { console.log(err); }\r\n\r\n            res.json({msg: 'Notice Created'});\r\n        });\r\n    }\r\n    \r\n\r\n    getNotices = async (req, res) => {\r\n        console.log(\"recieved Getnotice request\");\r\n        const request = new sql.Request();\r\n        request.query(`select * from lfgrequests`, (err, result) => {\r\n            if (err) { console.log(err); }\r\n            res.send(result.recordset);\r\n        });\r\n    }\r\n\r\n}\r\n","import * as express from 'express';\r\nimport * as sql from 'mssql';\r\nimport { AuthService } from '../services';\r\nimport { verify } from 'jsonwebtoken';\r\nimport { async } from 'q';\r\nimport { Student } from 'server/dto';\r\n\r\ndeclare const JWT_SECRET;\r\n\r\nexport class StudentController {\r\n    public router = express.Router();\r\n    private auth: AuthService;\r\n    constructor() {\r\n        this.intializeRoutes();\r\n        this.auth = new AuthService();\r\n    }\r\n\r\n    public intializeRoutes() {\r\n        this.router.get('/student/studentInfo', this.getStudentInfo);\r\n        this.router.get('/student/names', this.getStudentNames);\r\n        this.router.get('/student/details', this.getStudentDetailsAsStudent);\r\n        this.router.post('/student/details', this.getStudentDetailsAsAdmin);\r\n        this.router.put('/student/details', this.replaceStudentDetails);\r\n        this.router.get('/student/credits/totals', this.getNCEACreditAmounts);\r\n    }\r\n\r\n    getStudentNames = async (req, res) => {\r\n        const authToken = req.headers.authorization;\r\n        if (!this.auth.isExpired(authToken)) {\r\n            if (await this.auth.isPermitted(authToken, 'Teacher')) {\r\n                const request = new sql.Request();\r\n                request.query(`SELECT Name, UserID FROM Users WHERE AccountType = 'Student'`, (err, result) => {\r\n                    if (err) { console.log(err); }\r\n                    res.send(result.recordset);\r\n                });\r\n            }\r\n        } else {\r\n            res.send(401);\r\n        }\r\n    }\r\n\r\n    getStudentInfo = async (req, res) => {\r\n        const authToken = req.headers.authorization;\r\n        if (!this.auth.isExpired(authToken)) {\r\n            if (await this.auth.isPermitted(authToken, 'Teacher')) {\r\n                const request = new sql.Request();\r\n                request.query(`SELECT * FROM StudentInfo`, (err, result) => {\r\n                    if (err) { console.log(err); }\r\n                    res.send(result.recordset);\r\n                });\r\n            }\r\n        } else {\r\n            res.send(401);\r\n        }\r\n    }\r\n\r\n    getStudentDetailsAsStudent = async (req, res) => {\r\n        const authToken = req.headers.authorization;\r\n        if (!this.auth.isExpired(authToken)) {\r\n            if (await this.auth.isPermitted(authToken, 'Student')) {\r\n                const request = new sql.Request();\r\n                const token = verify(authToken, JWT_SECRET);\r\n                const UUID = token.userId;\r\n                request.query(`select * from StudentDetails WHERE UUID = '${UUID}'`, (err, result) => {\r\n                    if (err) { console.log(err); }\r\n\r\n                    if (result.rowsAffected !== 0 ) {\r\n                        res.send(result.recordset[0]);\r\n                    } else {\r\n                        // error\r\n                    }\r\n                });\r\n            } else {\r\n                res.send(401);\r\n            }\r\n        } else {\r\n            res.send(401);\r\n        }\r\n    }\r\n\r\n    getStudentDetailsAsAdmin = async (req, res) => {\r\n        const authToken = req.headers.authorization;\r\n        const userId = req.body.userId;\r\n        if (!this.auth.isExpired(authToken)) {\r\n            if (await this.auth.isPermitted(authToken, 'Administrator')) {\r\n                const request = new sql.Request();\r\n                request.query(`select * from StudentDetails WHERE UUID = '${userId}'`, (err, result) => {\r\n                    if (err) { console.log(err); }\r\n                    res.send(result.recordset[0]);\r\n                });\r\n            }\r\n        } else {\r\n            res.send(401);\r\n        }\r\n    }\r\n\r\n    replaceStudentDetails = async (req, res) => {\r\n        const authToken = req.headers.authorization;\r\n        let student: Student;\r\n        student = req.body;\r\n        const userId = student.UUID;\r\n        if (!this.auth.isExpired(authToken)) {\r\n            if (await this.auth.isPermitted(authToken, 'Administrator')) {\r\n                const request = new sql.Request();\r\n                // tslint:disable-next-line: max-line-length\r\n                request.query(`update StudentDetails set FirstName = '${student.FirstName}', ForeNames = '${student.ForeNames}', LastName = '${student.LastName}', DateOfBirth = '${student.DateOfBirth}', NSN = '${student.NSN}', HomePhone = '${student.HomePhone}', PhysicalUnitNo = '${student.PhysicalUnitNo}', PhysicalNumber = '${student.PhysicalNumber}', PhysicalStreet = '${student.PhysicalStreet}', PhysicalRuralDelivery = '${student.PhysicalRuralDelivery}', PhysicalSuburb = '${student.PhysicalSuburb}', PhysicalPostcode = '${student.PhysicalPostcode}', PostalUnitNo = '${student.PostalUnitNo}', PostalNumber = '${student.PostalNumber}', PostalStreet = '${student.PostalStreet}', PostalRuralDelivery = '${student.PostalRuralDelivery}', PostalSuburb = '${student.PostalSuburb}', PostalPostcode = '${student.PostalPostcode}', CaregiverOneRelationship = '${student.CaregiverOneRelationship}', CaregiverOneName = '${student.CaregiverOneName}', CaregiverOneAddress = '${student.CaregiverOneAddress}', CaregiverOneHomePhone = '${student.CaregiverOneHomePhone}', CaregiverOneMobilePhone = '${student.CaregiverOneMobilePhone}', CaregiverOneOccupation = '${student.CaregiverOneOccupation}', CaregiverOneWorkPhone = '${student.CaregiverOneWorkPhone}', CaregiverOneEmail = '${student.CaregiverOneEmail}', CaregiverTwoRelationship = '${student.CaregiverTwoRelationship}', CaregiverTwoName = '${student.CaregiverTwoName}', CaregiverTwoAddress = '${student.CaregiverTwoAddress}', CaregiverTwoHomePhone = '${student.CaregiverTwoHomePhone}', CaregiverTwoMobilePhone = '${student.CaregiverTwoMobilePhone}', CaregiverTwoOccupation = '${student.CaregiverTwoOccupation}', CaregiverTwoWorkPhone = '${student.CaregiverTwoWorkPhone}', CaregiverTwoEmail = '${student.CaregiverTwoEmail}', EmergencyContactRelationship = '${student.EmergencyContactRelationship}', EmergencyContactName = '${student.EmergencyContactName}', EmergencyContactAddress = '${student.EmergencyContactAddress}', EmergencyContactHomePhone = '${student.EmergencyContactHomePhone}', EmergencyContactMobilePhone = '${student.EmergencyContactMobilePhone}', EmergencyContactOccupation = '${student.EmergencyContactOccupation}', EmergencyContactWorkPhone = '${student.EmergencyContactWorkPhone}' where UUID = '${userId}'`, (err, result) => {\r\n                    if (err) { console.log(err); }\r\n\r\n                    res.send(result);\r\n                });\r\n            }\r\n        } else {\r\n            res.send(401);\r\n        }\r\n    }\r\n\r\n    getNCEACreditAmounts = async (req, res) => {\r\n        const authToken = req.headers.authorization;\r\n        const user = await this.auth.getUserByToken(authToken);\r\n        if (!this.auth.isExpired(authToken)) {\r\n            if (await this.auth.isPermitted(authToken, 'Student')) {\r\n                const request = new sql.Request();\r\n                // tslint:disable-next-line: max-line-length\r\n                request.query(`SELECT LevelOneNotAchieved, LevelOneAchieved, LevelOneMerit, LevelOneExcellence, LevelTwoNotAchieved, LevelTwoAchieved, LevelTwoMerit, LevelTwoExcellence, LevelThreeNotAchieved, LevelThreeAchieved, LevelThreeMerit, LevelThreeExcellence FROM StudentInfo WHERE uuid = '${user.UserID}'`, (err, result) => {\r\n                    if (err) { console.log(err); }\r\n\r\n                    if(result.recordset.length === 1){\r\n                        const recordset = result.recordset[0];\r\n                        const notachieved = recordset.LevelOneNotAchieved + recordset.LevelTwoNotAchieved + recordset.LevelThreeNotAchieved;\r\n                        const achieved = recordset.LevelOneAchieved + recordset.LevelTwoAchieved + recordset.LevelThreeAchieved;\r\n                        const merit = recordset.LevelOneMerit + recordset.LevelTwoMerit + recordset.LevelThreeMerit;\r\n                        const excellence = recordset.LevelOneExcellence + recordset.LevelTwoExcellence + recordset.LevelThreeExcellence;\r\n                        res.send({notachieved, achieved, merit, excellence});\r\n                    } else {\r\n                        res.send(result);\r\n                    }\r\n                });\r\n                // res.send({excellence: 6, merit: 5, achieved: 4, notachieved: 3});\r\n            }\r\n        }\r\n    }\r\n}\r\n","import * as express from 'express';\r\nimport * as sql from 'mssql';\r\nimport { UserDto } from 'server/dto';\r\nimport { sign, verify } from 'jsonwebtoken';\r\nimport { User } from '../models';\r\nimport { AuthService } from '../services';\r\nimport * as uuid from 'uuid';\r\nimport { __asyncGenerator } from 'tslib';\r\nimport { async } from 'q';\r\n\r\ndeclare const JWT_SECRET;\r\n\r\nexport class UserController {\r\n    public router = express.Router();\r\n\r\n    private auth: AuthService;\r\n\r\n    constructor() {\r\n        this.intializeRoutes();\r\n        this.auth = new AuthService();\r\n    }\r\n\r\n    public intializeRoutes() {\r\n        this.router.get('/ping', this.ping);\r\n        this.router.post('/login', this.login);\r\n        this.router.get('/getuser', this.getUserByToken);\r\n        this.router.post('/register', this.register);\r\n        this.router.get('/profileimage', this.getProfileImage);\r\n        this.router.put('/profileimage', this.updateProfileImage);\r\n    }\r\n\r\n    getUserByToken = async (req, res) => {\r\n        const authToken = req.headers.authorization;\r\n        const user = await this.auth.getUserByToken(authToken);\r\n        res.json({ role: user.AccountType });\r\n    }\r\n\r\n    login = async (req, res) => {\r\n        const Username = req.body.username;\r\n        const Password = req.body.password;\r\n        const request = new sql.Request();\r\n        request.query(`select * from Users where Username = '${Username}'`, (err, result) => {\r\n            if (err) { console.log(err); }\r\n            if (result.rowsAffected[0] !== 0) {\r\n                const user: User = result.recordset[0];\r\n                if (user.Password.trim() === Password) {\r\n                    const userID = user.UserID;\r\n                    const role = user.AccountType;\r\n                    const username = user.Username;\r\n                    const jwtToken = sign({userId: userID}, JWT_SECRET, {expiresIn: '1h'});\r\n                    res.json({ token: jwtToken, user: { username, role }});\r\n                } else {\r\n                    res.send({msg: 'Password incorrect'});\r\n                }\r\n            } else {\r\n                res.send({msg: 'User not found!'});\r\n            }\r\n        });\r\n    }\r\n\r\n    ping = (req, res) => {\r\n        res.json({msg: 'pong'});\r\n    }\r\n\r\n    register = (req, res) => {\r\n    const username = req.body.username;\r\n    const name = req.body.name;\r\n    const password = req.body.password;\r\n    const role = req.body.role;\r\n    const userId = uuid();\r\n    const request = new sql.Request();\r\n    request.query(`select * from Users where Username = '${username}' OR Name = '${name}'`, (err, recordset) => {\r\n        if (err) { console.log(err); }\r\n        if (recordset.rowsAffected == 0) {\r\n            // tslint:disable-next-line: max-line-length\r\n            request.query(`insert into Users (\"Username\", \"Name\", \"Password\", \"AccountType\", \"UserID\") values ('${username}', '${name}', '${password}', '${role}', '${userId}');`, (err2, result) => {\r\n                if (err2) { console.log(err2); }\r\n                console.log(result);\r\n\r\n                if (role === 'Student') {\r\n                    const request2 = new sql.Request();\r\n                    request2.query(`insert into StudentDetails (\"UUID\") values ('${userId}')`, (err3, result2) => {\r\n                        if (err3) { console.log(err3); }\r\n                        console.log(result2);\r\n\r\n                    });\r\n\r\n                    const request3 = new sql.Request();\r\n                    // tslint:disable-next-line: max-line-length\r\n                    request3.query(`insert into StudentInfo (\"LevelOneNotAchieved\", \"LevelOneAchieved\", \"LevelOneMerit\", \"LevelOneExcellence\", \"LevelTwoNotAchieved\", \"LevelTwoAchieved\", \"LevelTwoMerit\", \"LevelTwoExcellence\", \"LevelThreeNotAchieved\", \"LevelThreeAchieved\", \"LevelThreeMerit\", \"LevelThreeExcellence\", \"uuid\") values ('${0}', '${0}', '${0}', '${0}', '${0}', '${0}', '${0}', '${0}', '${0}', '${0}', '${0}', '${0}', '${userId}')`, (err4, result3) => {\r\n                        if(err4) { console.log(err4); }\r\n                        console.log(result3);\r\n                    });\r\n                }\r\n                res.json({msg: 'Register Successful'});\r\n            });\r\n        } else {\r\n            res.json({msg: 'User already exists!'});\r\n        }\r\n    });\r\n    }\r\n\r\n    getProfileImage = async(req, res) => {\r\n        const authToken = req.headers.authorization;\r\n        const user = await this.auth.getUserByToken(authToken);\r\n        const request = new sql.Request();\r\n        request.query(`SELECT ProfileImage FROM Users WHERE UserID = '${user.UserID}'`, (err, result) => {\r\n            if(err){ console.log(err); }\r\n\r\n            res.json({image: `${result.recordset[0].ProfileImage}`});\r\n        })\r\n    }\r\n\r\n    updateProfileImage =  async (req, res) => {\r\n        const authToken = req.headers.authorization;\r\n        const imageDetails = req.body.image;\r\n        const user = await this.auth.getUserByToken(authToken);\r\n        const request = new sql.Request();\r\n        request.query(`UPDATE Users set ProfileImage = '${imageDetails}' WHERE UserID = '${user.UserID}'`, (err, result) => {\r\n            if (err) { console.log(err); }\r\n            \r\n            res.send(result);\r\n        });\r\n    }\r\n\r\n}\r\n","export * from './UserController';\r\nexport * from './AuthController';\r\nexport * from './NoticesController';\r\nexport * from './StudentController';\r\n","import App from './app';\r\nimport { UserController, AuthController, NoticesController, StudentController } from './controllers';\r\nconst app = new App(\r\n    [\r\n        new UserController(),\r\n        new AuthController(),\r\n        new NoticesController(),\r\n        new StudentController()\r\n    ],\r\n    3000,\r\n);console.log(\"serverscript run\")\r\n\r\napp.listen();\r\n","import { User } from '../models';\r\nimport { verify } from 'jsonwebtoken';\r\nimport * as sql from 'mssql';\r\n\r\ndeclare const JWT_SECRET;\r\n\r\nexport class AuthService {\r\n    constructor() { }\r\n\r\n    isExpired(token): boolean {\r\n        try {\r\n            verify(token, JWT_SECRET);\r\n        } catch (TokenExpiredError) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async isPermitted(token: string, requestedRole: string): Promise<boolean> {\r\n        return new Promise( async (resolve) => {\r\n                const user = await this.getUserByToken(token);\r\n                if (user.AccountType === requestedRole) {\r\n                    resolve(true);\r\n                } else if (user.AccountType === 'Administrator') {\r\n                    resolve(true);\r\n                } else {\r\n                    resolve(false);\r\n                }\r\n        });\r\n    }\r\n\r\n    async getUserByToken(token: string): Promise<User> {\r\n        const verifiedToken = verify(token, JWT_SECRET);\r\n        // tslint:disable-next-line: max-line-length\r\n        return new Promise((resolve, reject) => { const request = new sql.Request(); request.query(`select * from Users where UserID = '${verifiedToken.userId}'`, (err, recordset) => {\r\n                if (err) { console.log(err); }\r\n\r\n                if (recordset.rowsAffected[0] !== 0) {\r\n                    const result: User = recordset.recordset[0];\r\n                    return resolve(result);\r\n                } else {\r\n                    return reject('Error!');\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","export * from './authService';\r\nexport * from './initService';","import * as sql from 'mssql';\r\nimport { Notice } from 'server/models';\r\n\r\nexport class InitService{\r\n    constructor(){\r\n\r\n    }\r\n\r\n    public async noticesTimeout(){\r\n        const request = new sql.Request();\r\n        request.query(`SELECT * FROM lfgrequests`, (err, result) => {\r\n            console.log(result);\r\n            const recordset: Notice[] = result.recordset;\r\n            if (err) { console.log(err); }\r\n\r\n            for (const record of recordset) {\r\n                if (record.enddate !== null) {\r\n                    setTimeout(() => {\r\n                        new sql.Request().query(`DELETE FROM lfgrequests WHERE enddate='${record.enddate}'`, (err2, result2) => {\r\n                            if (err2) { console.log(err2); }\r\n\r\n                            console.log(result2);\r\n                        });\r\n                    }, (new Date(record.enddate).getTime() - new Date().getTime()));\r\n                }\r\n            }\r\n        });\r\n    }\r\n}","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mssql\");","module.exports = require(\"tslib\");","module.exports = require(\"uuid\");"],"sourceRoot":""}